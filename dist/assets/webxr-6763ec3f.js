var d=Object.defineProperty;var u=(t,e,s)=>e in t?d(t,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[e]=s;var r=(t,e,s)=>(u(t,typeof e!="symbol"?e+"":e,s),s);import"./modulepreload-polyfill-3cfb730f.js";var a=!1;(async function(){navigator.xr&&navigator.xr.isSessionSupported&&await navigator.xr.isSessionSupported("immersive-ar")?document.getElementById("enter-ar").addEventListener("click",window.app.activateXR):onNoXRDevice()})();class p{constructor(){r(this,"activateXR",async()=>{try{this.xrSession=await navigator.xr.requestSession("immersive-ar",{requiredFeatures:["hit-test","dom-overlay"],domOverlay:{root:document.body}}),this.createXRCanvas(),await this.onSessionStarted()}catch(e){console.log(e),onNoXRDevice()}});r(this,"onSessionStarted",async()=>{document.body.classList.add("ar"),this.setupThreeJs(),this.localReferenceSpace=await this.xrSession.requestReferenceSpace("local"),this.viewerSpace=await this.xrSession.requestReferenceSpace("viewer"),this.hitTestSource=await this.xrSession.requestHitTestSource({space:this.viewerSpace}),this.xrSession.requestAnimationFrame(this.onXRFrame),this.xrSession.addEventListener("select",this.onSelect)});r(this,"onSelect",()=>{if(window.sunflower&&this.isSelectEventForAR){const e=window.sunflower.clone();e.userData.isClone=!0,e.position.copy(this.reticle.position),e.scale.set(2,2,2),this.scene.add(e),a||this.restartScene(!0,"",this.reticle);const s=this.scene.children.find(i=>i.name==="shadowMesh");s.position.y=e.position.y}this.isSelectEventForAR=!0});r(this,"removeSunflowerClone",()=>{this.scene.children.forEach(e=>{e.userData.isClone&&this.scene.remove(e)})});r(this,"onXRFrame",(e,s)=>{this.xrSession.requestAnimationFrame(this.onXRFrame);const i=this.xrSession.renderState.baseLayer.framebuffer;this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,i),this.renderer.setFramebuffer(i);const h=s.getViewerPose(this.localReferenceSpace);if(h){const n=h.views[0],l=this.xrSession.renderState.baseLayer.getViewport(n);this.renderer.setSize(l.width,l.height),this.camera.matrix.fromArray(n.transform.matrix),this.camera.projectionMatrix.fromArray(n.projectionMatrix),this.camera.updateMatrixWorld(!0);const o=s.getHitTestResults(this.hitTestSource);if(!this.stabilized&&o.length>0&&(this.stabilized=!0,document.body.classList.add("stabilized")),o.length>0&&!a){const c=o[0].getPose(this.localReferenceSpace);this.reticle.visible=!0,this.reticle.position.set(c.transform.position.x,c.transform.position.y,c.transform.position.z),this.reticle.updateMatrixWorld(!0)}this.renderer.render(this.scene,this.camera)}});this.resetButton=document.getElementById("resetButton"),this.isSelectEventForAR=!0}createXRCanvas(){this.canvas=document.createElement("canvas"),document.body.appendChild(this.canvas),this.gl=this.canvas.getContext("webgl",{xrCompatible:!0}),this.xrSession.updateRenderState({baseLayer:new XRWebGLLayer(this.xrSession,this.gl)})}setupThreeJs(){this.renderer=new THREE.WebGLRenderer({alpha:!0,preserveDrawingBuffer:!0,canvas:this.canvas,context:this.gl}),this.renderer.autoClear=!1,this.renderer.shadowMap.enabled=!0,this.renderer.shadowMap.type=THREE.PCFSoftShadowMap,this.scene=DemoUtils.createLitScene(),this.reticle=new Reticle,this.scene.add(this.reticle),this.camera=new THREE.PerspectiveCamera,this.camera.matrixAutoUpdate=!1,this.resetButton.addEventListener("click",e=>{e.stopPropagation(),console.log("CLICK"),this.restartScene(!1,"",this.reticle)})}restartScene(e,s,i){console.log("restartScene called with viewMode:",e),e==!0?(this.resetButton.style.display="block",a=!0,i.visible=!1,console.log("Button should be visible")):(this.resetButton.style.display="none",a=!1,this.removeSunflowerClone(),console.log("Button should be hidden"))}}document.addEventListener("DOMContentLoaded",()=>{const t=new p;t.resetButton.addEventListener("click",e=>{e.stopPropagation(),t.isSelectEventForAR=!1,t.restartScene(!1,"",t.reticle)}),window.app=t});
